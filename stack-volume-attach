#!/bin/bash
set -eu -o pipefail

DEVICE=/dev/xvdd

if [ $# -lt 2 ]; then
  echo "$0 volume-name mountpoint" >&2
  exit 1
fi

if [ $# -gt 2 ]; then
  DEVICE="$3"
fi

VOLUME_NAME=$1
MNT=$2
INSTANCE_ID=$(curl -sL http://169.254.169.254/latest/meta-data/instance-id)
AZ=$(curl -sL http://169.254.169.254/latest/meta-data/placement/availability-zone)
REGION=$(echo "$AZ" | sed 's/[^0-9]*$//')

VOLUME_GROUP=$(aws --region "$REGION" ec2 describe-instances --instance-ids "$INSTANCE_ID" \
  | jq -r '.Reservations[0].Instances[0].Tags[]|select(.Key == "ebs-volume-group").Value')

if [ -n "$VOLUME_GROUP" ]; then
  VOLUMES=$(aws ec2 --region "$REGION" describe-volumes --filters \
    "Name=tag:volume-group,Values=$VOLUME_GROUP" \
    "Name=tag:volume-name,Values=$VOLUME_NAME" \
    "Name=availability-zone,Values=$AZ"
  )
  if [ "$(echo "$VOLUMES" | jq -r '.Volumes[0]')" == "null" ]; then
    echo "No EBS volume in $AZ tagged volume-name:$VOLUME_NAME and volume-group:$VOLUME_GROUP found" >&2
    exit 1
  fi
else
  echo "Tag 'ebs-volume-group' is empty, using instance stack to find volume"
  STACK_ID=$(aws --region "$REGION" ec2 describe-instances --instance-ids "$INSTANCE_ID" \
    | jq -r '.Reservations[0].Instances[0].Tags[]|select(.Key == "aws:cloudformation:stack-id").Value')

  VOLUMES=$(aws ec2 --region "$REGION" describe-volumes --filters \
    "Name=tag:aws:cloudformation:stack-id,Values=$STACK_ID" \
    "Name=tag:volume-name,Values=$VOLUME_NAME" \
    "Name=availability-zone,Values=$AZ"
  )
  if [ "$(echo "$VOLUMES" | jq -r '.Volumes[0]')" == "null" ]; then
    echo "No EBS volume in $AZ tagged volume-name:$VOLUME_NAME found in stack $STACK_ID" >&2
    exit 1
  fi
fi

if [ "$(echo "$VOLUMES" | jq -r '.Volumes[1]')" != "null" ]; then
  echo "More than one volume in $AZ found: $VOLUMES" >&2
  exit 1
fi

# Check if block device is already attached to this instance.
# If not, let's check the state of the volume and if it is
# available, let's attach it to this instance
if ! [ -b "$DEVICE" ]; then
  VOLUME_STATE=$(echo "$VOLUMES" | jq -r '.Volumes[0].State')
  if [ "$VOLUME_STATE" != "available" ]; then
    echo "Volume $VOLUME_NAME is not available"
    exit 1
  fi

  VOLUME_ID=$(echo "$VOLUMES" | jq -r '.Volumes[0].VolumeId')
  aws --region "$REGION" ec2 attach-volume --volume-id "$VOLUME_ID" --instance-id "$INSTANCE_ID" --device "$DEVICE" \
    || exit 1
fi

if ! [ -b "${DEVICE}1" ]; then
  printf "n\n\n\n\n\nw\n" | fdisk "$DEVICE"
  mkfs.ext4 "${DEVICE}1"
fi

grep "^${DEVICE}1" /proc/mounts || mount "${DEVICE}1" "$MNT"
echo "$VOLUMES" | jq -r '.Volumes[0]' > "$MNT/.volume.json"
